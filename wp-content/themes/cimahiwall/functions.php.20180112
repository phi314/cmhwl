<?php
/**
 * WP Bootstrap Starter functions and definitions
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 *
 * @package WP_Bootstrap_Starter
 */

if ( ! function_exists( 'wp_bootstrap_starter_setup' ) ) :
/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which
 * runs before the init hook. The init hook is too late for some features, such
 * as indicating support for post thumbnails.
 */
function wp_bootstrap_starter_setup() {
	/*
	 * Make theme available for translation.
	 * Translations can be filed in the /languages/ directory.
	 * If you're building a theme based on WP Bootstrap Starter, use a find and replace
	 * to change 'cimahiwall' to the name of your theme in all the template files.
	 */
	load_theme_textdomain( 'cimahiwall', get_template_directory() . '/languages' );

	// Add default posts and comments RSS feed links to head.
	add_theme_support( 'automatic-feed-links' );

	/*
	 * Let WordPress manage the document title.
	 * By adding theme support, we declare that this theme does not use a
	 * hard-coded <title> tag in the document head, and expect WordPress to
	 * provide it for us.
	 */
	add_theme_support( 'title-tag' );

	/*
	 * Enable support for Post Thumbnails on posts and pages.
	 *
	 * @link https://developer.wordpress.org/themes/functionality/featured-images-post-thumbnails/
	 */
	add_theme_support( 'post-thumbnails' );

	// This theme uses wp_nav_menu() in one location.
	register_nav_menus( array(
		'primary' => esc_html__( 'Primary', 'cimahiwall' ),
	) );

	/*
	 * Switch default core markup for search form, comment form, and comments
	 * to output valid HTML5.
	 */
	add_theme_support( 'html5', array(
		'comment-form',
		'comment-list',
		'gallery',
		'caption',
	) );

	// Set up the WordPress core custom background feature.
	add_theme_support( 'custom-background', apply_filters( 'wp_bootstrap_starter_custom_background_args', array(
		'default-color' => 'ffffff',
		'default-image' => '',
	) ) );

	// Add theme support for selective refresh for widgets.
	add_theme_support( 'customize-selective-refresh-widgets' );

    function wp_boostrap_starter_add_editor_styles() {
        add_editor_style( 'custom-editor-style.css' );
    }
    add_action( 'admin_init', 'wp_boostrap_starter_add_editor_styles' );

}
endif;
add_action( 'after_setup_theme', 'wp_bootstrap_starter_setup' );

/**
 * Set the content width in pixels, based on the theme's design and stylesheet.
 *
 * Priority 0 to make it available to lower priority callbacks.
 *
 * @global int $content_width
 */
function wp_bootstrap_starter_content_width() {
	$GLOBALS['content_width'] = apply_filters( 'wp_bootstrap_starter_content_width', 1170 );
}
add_action( 'after_setup_theme', 'wp_bootstrap_starter_content_width', 0 );

/**
 * Register widget area.
 *
 * @link https://developer.wordpress.org/themes/functionality/sidebars/#registering-a-sidebar
 */
function wp_bootstrap_starter_widgets_init() {
	register_sidebar( array(
		'name'          => esc_html__( 'Sidebar', 'cimahiwall' ),
		'id'            => 'sidebar-1',
		'description'   => esc_html__( 'Add widgets here.', 'cimahiwall' ),
		'before_widget' => '<section id="%1$s" class="widget %2$s">',
		'after_widget'  => '</section>',
		'before_title'  => '<h3 class="widget-title">',
		'after_title'   => '</h3>',
	) );
    register_sidebar( array(
        'name'          => esc_html__( 'Footer 1', 'cimahiwall' ),
        'id'            => 'footer-1',
        'description'   => esc_html__( 'Add widgets here.', 'cimahiwall' ),
        'before_widget' => '<section id="%1$s" class="widget %2$s">',
        'after_widget'  => '</section>',
        'before_title'  => '<h3 class="widget-title">',
        'after_title'   => '</h3>',
    ) );
    register_sidebar( array(
        'name'          => esc_html__( 'Footer 2', 'cimahiwall' ),
        'id'            => 'footer-2',
        'description'   => esc_html__( 'Add widgets here.', 'cimahiwall' ),
        'before_widget' => '<section id="%1$s" class="widget %2$s">',
        'after_widget'  => '</section>',
        'before_title'  => '<h3 class="widget-title">',
        'after_title'   => '</h3>',
    ) );
    register_sidebar( array(
        'name'          => esc_html__( 'Footer 3', 'cimahiwall' ),
        'id'            => 'footer-3',
        'description'   => esc_html__( 'Add widgets here.', 'cimahiwall' ),
        'before_widget' => '<section id="%1$s" class="widget %2$s">',
        'after_widget'  => '</section>',
        'before_title'  => '<h3 class="widget-title">',
        'after_title'   => '</h3>',
    ) );

    /*
     * Customy
     */
    register_sidebar( array(
        'name'          => esc_html__( 'Sidebar Place', 'cimahiwall' ),
        'id'            => 'sidebar-place',
        'description'   => esc_html__( 'Add widgets here.', 'cimahiwall' ),
        'before_widget' => '<section id="%1$s" class="widget %2$s">',
        'after_widget'  => '</section>',
        'before_title'  => '<h3 class="widget-title">',
        'after_title'   => '</h3>',
    ) );
}
add_action( 'widgets_init', 'wp_bootstrap_starter_widgets_init' );



/**
 * Enqueue scripts and styles.
 */
function wp_bootstrap_starter_scripts() {
	// load bootstrap css
	wp_enqueue_style( 'cimahiwall-bootstrap-css', get_template_directory_uri() . '/inc/assets/css/bootstrap.min.css' );

    // load select2
    wp_enqueue_style( 'select2-css', 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css' );
    wp_enqueue_script('select2-js', 'https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js', array(), '', true );

    // load AItheme styles
	// load WP Bootstrap Starter styles
	wp_enqueue_style( 'cimahiwall-style', get_stylesheet_uri() );
//    if(get_theme_mod( 'preset_style_setting' ) === 'poppins-lora') {
//        wp_enqueue_style( 'cimahiwall-poppins-lora-font', '//fonts.googleapis.com/css?family=Lora:400,400i,700,700i|Poppins:300,400,500,600,700' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'montserrat-merriweather') {
//        wp_enqueue_style( 'cimahiwall-montserrat-merriweather-font', '//fonts.googleapis.com/css?family=Merriweather:300,400,400i,700,900|Montserrat:300,400,400i,500,700,800' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'poppins-poppins') {
//        wp_enqueue_style( 'cimahiwall-poppins-font', '//fonts.googleapis.com/css?family=Poppins:300,400,500,600,700' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'roboto-roboto') {
//        wp_enqueue_style( 'cimahiwall-roboto-font', '//fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i,900,900i' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'arbutusslab-opensans') {
//        wp_enqueue_style( 'cimahiwall-arbutusslab-opensans-font', '//fonts.googleapis.com/css?family=Arbutus+Slab|Open+Sans:300,300i,400,400i,600,600i,700,800' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'oswald-muli') {
//        wp_enqueue_style( 'cimahiwall-oswald-muli-font', '//fonts.googleapis.com/css?family=Muli:300,400,600,700,800|Oswald:300,400,500,600,700' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'montserrat-opensans') {
//        wp_enqueue_style( 'cimahiwall-montserrat-opensans-font', '//fonts.googleapis.com/css?family=Montserrat|Open+Sans:300,300i,400,400i,600,600i,700,800' );
//    }
//    if(get_theme_mod( 'preset_style_setting' ) === 'robotoslab-roboto') {
//        wp_enqueue_style( 'cimahiwall-robotoslab-roboto', '//fonts.googleapis.com/css?family=Roboto+Slab:100,300,400,700|Roboto:300,300i,400,400i,500,700,700i' );
//    }
    if(get_theme_mod( 'preset_style_setting' ) && get_theme_mod( 'preset_style_setting' ) !== 'default') {
        wp_enqueue_style( 'cimahiwall-'.get_theme_mod( 'preset_style_setting' ), get_template_directory_uri() . '/inc/assets/css/presets/typography/'.get_theme_mod( 'preset_style_setting' ).'.css', false, '' );
    }
    //Color Scheme
    /*if(get_theme_mod( 'preset_color_scheme_setting' ) && get_theme_mod( 'preset_color_scheme_setting' ) !== 'default') {
        wp_enqueue_style( 'cimahiwall-'.get_theme_mod( 'preset_color_scheme_setting' ), get_template_directory_uri() . '/inc/assets/css/presets/color-scheme/'.get_theme_mod( 'preset_color_scheme_setting' ).'.css', false, '' );
    }else {
        wp_enqueue_style( 'cimahiwall-default', get_template_directory_uri() . '/inc/assets/css/presets/color-scheme/blue.css', false, '' );
    }*/

	wp_enqueue_script('jquery');

    // Internet Explorer HTML5 support
    wp_enqueue_script( 'html5hiv',get_template_directory_uri().'/inc/assets/js/html5.js', array(), '3.7.0', false );
    wp_script_add_data( 'html5hiv', 'conditional', 'lt IE 9' );

	// load bootstrap js
    wp_enqueue_script('cimahiwall-popper', get_template_directory_uri() . '/inc/assets/js/popper.min.js', array() );
	wp_enqueue_script('cimahiwall-bootstrapjs', get_template_directory_uri() . '/inc/assets/js/bootstrap.min.js', array() );
    wp_enqueue_script('cimahiwall-themejs', get_template_directory_uri() . '/inc/assets/js/theme-script.js', array() );
	wp_enqueue_script( 'cimahiwall-skip-link-focus-fix', get_template_directory_uri() . '/inc/assets/js/skip-link-focus-fix.js', array(), '20151215', true );

    // load Font Awesome
    wp_enqueue_style( 'cimahiwall-font-awesome', get_template_directory_uri() . '/inc/assets/css/font-awesome.min.css', false, '4.1.0' );

    // load slickjs
    wp_enqueue_style( 'slick-css', get_template_directory_uri() . '/inc/assets/css/slick.css' );
    wp_enqueue_style( 'slick-theme-css', get_template_directory_uri() . '/inc/assets/css/slick-theme.css' );
    wp_enqueue_script('slick-js', get_template_directory_uri() . '/inc/assets/js/slick.min.js', array(), '1.8.1', true );

    // load instafeed
    wp_enqueue_script('instafeed-js', get_template_directory_uri() . '/inc/assets/js/instafeed.min.js', array(), time(), true );

    if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
		wp_enqueue_script( 'comment-reply' );
	}

	// Add Localize General
    $cimahiwall_localize = [
        'ajax_url' => admin_url( 'admin-ajax.php' )
    ];
    wp_localize_script('cimahiwall-themejs', 'cimahiwall', $cimahiwall_localize );


	// Add Localize Instagram Feed
    $instagram_feed = get_field('instagram_feed', get_the_ID());
    $instagram_user_id = get_field('instagram_user_id', get_the_ID());
    $instagram_tag = get_field('instagram_tag', get_the_ID());
    if( ! empty($instagram_feed)) {
        $instagram = [
            'cimahiwall_instagram_feed' => $instagram_feed,
            'cimahiwall_instagram_user_id' => $instagram_user_id,
            'cimahiwall_instagram_tag' => $instagram_tag
        ];
        wp_localize_script('instafeed-js', 'instagram', $instagram);
    }

}
add_action( 'wp_enqueue_scripts', 'wp_bootstrap_starter_scripts' );


function wp_bootstrap_starter_password_form() {
    global $post;
    $label = 'pwbox-'.( empty( $post->ID ) ? rand() : $post->ID );
    $o = '<form action="' . esc_url( site_url( 'wp-login.php?action=postpass', 'login_post' ) ) . '" method="post">
    <div class="d-block mb-3">' . __( "To view this protected post, enter the password below:", "cimahiwall" ) . '</div>
    <div class="form-group form-inline"><label for="' . $label . '" class="mr-2">' . __( "Password:", "cimahiwall" ) . ' </label><input name="post_password" id="' . $label . '" type="password" size="20" maxlength="20" class="form-control mr-2" /> <input type="submit" name="Submit" value="' . esc_attr__( "Submit", "cimahiwall" ) . '" class="btn btn-primary"/></div>
    </form>';
    return $o;
}
add_filter( 'the_password_form', 'wp_bootstrap_starter_password_form' );



/**
 * Implement the Custom Header feature.
 */
require get_template_directory() . '/inc/custom-header.php';

/**
 * Custom template tags for this theme.
 */
require get_template_directory() . '/inc/template-tags.php';

/**
 * Custom functions that act independently of the theme templates.
 */
require get_template_directory() . '/inc/extras.php';

/**
 * Customizer additions.
 */
require get_template_directory() . '/inc/customizer.php';

/**
 * Load plugin compatibility file.
 */
require get_template_directory() . '/inc/plugin-compatibility/plugin-compatibility.php';

/**
 * Load custom WordPress nav walker.
 */
if ( ! class_exists( 'wp_bootstrap_navwalker' )) {
    require_once(get_template_directory() . '/inc/wp_bootstrap_navwalker.php');
}

/**
 * ========================================
 * Customy
 * ========================================
 */

/**
 * Load custom admin file.
 */
require get_template_directory() . '/inc/custom-admin.php';

/**
 * Load request handler file.
 */
require get_template_directory() . '/inc/request-handler.php';

function limit_text($string, $limit) {
    echo substr($string, 0, $limit) . '...';
}

/*
 * Custom from switch-sticky
 * Show 9 place per page on archive and search
 */
function places_per_page($query) {
    if ( !is_admin() && $query->is_main_query() && is_post_type_archive('place') ) {

        // Custom Sticky
        $sticky_post_place = [];
        $sticky_posts = get_option( 'sticky_posts' );
        foreach ($sticky_posts as $sticky_post) {
            if( 'place' == get_post_type($sticky_post)) {
                $sticky_post_place[] = $sticky_post;
            }
        }

        $posts_per_page = 9;
        if (count($sticky_post_place) > $posts_per_page)
            $query->set('posts_per_page', $posts_per_page - 1);
        else
            $query->set( 'posts_per_page', $posts_per_page );

    }
}
add_action('pre_get_posts','places_per_page');

/*
 * Pagination
 */
function cimahiwall_pagination($pages = '', $range = 2)
{
    $showitems = ($range * 2) + 1;
    global $paged;
    if(empty($paged)) $paged = 1;
    if($pages == '')
    {
        global $wp_query;
        $pages = $wp_query->max_num_pages;

        if(!$pages)
            $pages = 1;
    }

    if(1 != $pages)
    {
        echo '<nav aria-label="Page navigation" role="navigation">';
        echo '<span class="sr-only">Page navigation</span>';
        echo '<ul class="pagination justify-content-center ft-wpbs">';

        if($paged > 2 && $paged > $range+1 && $showitems < $pages)
            echo '<li class="page-item"><a class="page-link" href="'.get_pagenum_link(1).'" aria-label="First Page">&laquo;<span class="hidden-sm-down d-none d-md-block"> First</span></a></li>';

        if($paged > 1 && $showitems < $pages)
            echo '<li class="page-item"><a class="page-link" href="'.get_pagenum_link($paged - 1).'" aria-label="Previous Page">&lsaquo;<span class="hidden-sm-down d-none d-md-block"> Previous</span></a></li>';

        for ($i=1; $i <= $pages; $i++)
        {
            if (1 != $pages &&( !($i >= $paged+$range+1 || $i <= $paged-$range-1) || $pages <= $showitems ))
                echo ($paged == $i)? '<li class="page-item active"><span class="page-link border-0 bg-primary"><span class="sr-only">Current Page </span>'.$i.'</span></li>' : '<li class="page-item"><a class="page-link" href="'.get_pagenum_link($i).'"><span class="sr-only">Page </span>'.$i.'</a></li>';
        }

        if ($paged < $pages && $showitems < $pages)
            echo '<li class="page-item"><a class="page-link" href="'.get_pagenum_link($paged + 1).'" aria-label="Next Page"><span class="hidden-sm-down d-none d-md-block">Next </span>&rsaquo;</a></li>';

        if ($paged < $pages-1 &&  $paged+$range-1 < $pages && $showitems < $pages)
            echo '<li class="page-item"><a class="page-link" href="'.get_pagenum_link($pages).'" aria-label="Last Page"><span class="hidden-sm-down d-none d-md-block">Last </span>&raquo;</a></li>';

        echo '</ul>';
        echo '</nav>';
        //echo '<div class="pagination-info mb-5 text-center">[ <span class="text-muted">Page</span> '.$paged.' <span class="text-muted">of</span> '.$pages.' ]</div>';
    }
}

/**
 * Get Image from term
 *
 * @author Arief Wibowo
 * @param $taxonomy
 * @param $term_id
 * @param string $field
 * @return bool|mixed|string
 */
function get_term_image_url( $taxonomy, $term_id, $field = 'image' ) {

    $image_url = get_field( $field, $taxonomy.'_'.$term_id );

    if( empty($image_url) ) {
        $image_url = get_template_directory_uri() . '/inc/assets/images/' . $taxonomy .'_default.jpg';
    }

    return $image_url;
}

/**
 * Get Image from term
 *
 * @param $taxonomy
 * @param $term_id
 * @param string $field
 */
function the_term_icon( $taxonomy, $term_id, $field = 'icon' ) {

    $icon = get_field( $field, $taxonomy.'_'.$term_id );

    if( empty($icon) ) {
        $icon = 'flag';
    }

    echo "<i class='fa fa-" . $icon. "'></i>";
}

/**
 * Widgets
 */
require get_template_directory() . '/inc/widgets.php';